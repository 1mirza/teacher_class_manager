# .github/workflows/build_flutter.yml

name: Build and Sign Flutter App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get Flutter dependencies
        run: flutter pub get

      # مرحله اصلی: خواندن کلید امضا و ساخت فایل jks به روشی کاملا امن و استاندارد
      - name: Decode Keystore
        env:
          SIGNING_KEY_BASE64: ${{ secrets.SIGNING_KEY_BASE64 }}
        run: |
          echo $SIGNING_KEY_BASE64 | base64 --decode --ignore-garbage > android/app/my-release-key.jks
        
      # بررسی می‌کنیم که آیا فایل کلید ساخته شده است
      - name: Verify Keystore File
        run: |
          if [ -f "android/app/my-release-key.jks" ]; then
            echo "Keystore file created successfully."
            ls -l android/app/my-release-key.jks
          else
            echo "Error: Keystore file was not created."
            exit 1
          fi

      # ساخت فایل key.properties با استفاده از GitHub Secrets
      - name: Create key.properties file
        run: |
          echo "storeFile=my-release-key.jks" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties

      # ساخت فایل APK امضا شده
      - name: Build Signed APK
        run: flutter build apk --release

      # ساخت فایل App Bundle امضا شده
      - name: Build Signed App Bundle
        run: flutter build appbundle --release

      # آپلود آرتیفکت‌ها
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload App Bundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-appbundle
          path: build/app/outputs/bundle/release/app-release.aab

